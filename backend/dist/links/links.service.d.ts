import { PrismaService } from '../prisma/prisma.service';
import { CreateLinkDto, UpdateLinkDto } from './dto';
export declare class LinksService {
    private prisma;
    constructor(prisma: PrismaService);
    create(createLinkDto: CreateLinkDto): Promise<{
        originalUrl: string;
        shortCode: string;
        title: string | null;
        description: string | null;
        favicon: string | null;
        isActive: boolean;
        expiresAt: Date | null;
        password: string | null;
        id: string;
        clicks: number;
        createdAt: Date;
        updatedAt: Date;
        folderId: string | null;
    }>;
    findAll(query?: any): Promise<{
        originalUrl: string;
        shortCode: string;
        title: string | null;
        description: string | null;
        favicon: string | null;
        isActive: boolean;
        expiresAt: Date | null;
        password: string | null;
        id: string;
        clicks: number;
        createdAt: Date;
        updatedAt: Date;
        folderId: string | null;
    }[]>;
    findOne(id: string): Promise<{
        originalUrl: string;
        shortCode: string;
        title: string | null;
        description: string | null;
        favicon: string | null;
        isActive: boolean;
        expiresAt: Date | null;
        password: string | null;
        id: string;
        clicks: number;
        createdAt: Date;
        updatedAt: Date;
        folderId: string | null;
    } | null>;
    findByShortCode(shortCode: string): Promise<{
        originalUrl: string;
        shortCode: string;
        title: string | null;
        description: string | null;
        favicon: string | null;
        isActive: boolean;
        expiresAt: Date | null;
        password: string | null;
        id: string;
        clicks: number;
        createdAt: Date;
        updatedAt: Date;
        folderId: string | null;
    } | null>;
    update(id: string, updateLinkDto: UpdateLinkDto): Promise<{
        originalUrl: string;
        shortCode: string;
        title: string | null;
        description: string | null;
        favicon: string | null;
        isActive: boolean;
        expiresAt: Date | null;
        password: string | null;
        id: string;
        clicks: number;
        createdAt: Date;
        updatedAt: Date;
        folderId: string | null;
    }>;
    remove(id: string): Promise<{
        originalUrl: string;
        shortCode: string;
        title: string | null;
        description: string | null;
        favicon: string | null;
        isActive: boolean;
        expiresAt: Date | null;
        password: string | null;
        id: string;
        clicks: number;
        createdAt: Date;
        updatedAt: Date;
        folderId: string | null;
    }>;
    private generateShortCode;
    private generateUniqueShortCode;
}
